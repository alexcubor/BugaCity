import express from 'express';
import { Request, Response } from 'express';

const router = express.Router();

// GET /api/rewards - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–∞–≥—Ä–∞–¥—ã
router.get('/', async (req: Request, res: Response) => {
  try {
    const db = req.app.locals.db;
    if (!db) {
      return res.status(503).json({ error: 'Database not connected' });
    }
    const rewards = await db.collection('rewards').find({}).toArray();
    console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ –ë–î:', rewards);

    const formattedRewards = rewards.map((reward: any) => ({
      id: reward.name || reward._id?.toString(),
      name: reward?.translations?.ru?.label || reward?.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      description: reward?.translations?.ru?.description || '',
      price: reward?.price ?? 0
    }));

    res.json(formattedRewards);
  } catch (error) {
    console.error('Awards list error:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥' });
  }
});

// GET /api/rewards/:id - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É
router.get('/:id', async (req: Request, res: Response) => {
  try {
    const db = req.app.locals.db;
    if (!db) {
      return res.status(503).json({ error: 'Database not connected' });
    }
    const { id } = req.params;
    
    const reward = await db.collection('rewards').findOne({ $or: [{ name: id }, { _id: id }] });
    
    if (!reward) {
      return res.status(404).json({ error: '–ù–∞–≥—Ä–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }

    const formattedReward = {
      id: reward.name || reward._id?.toString(),
      name: reward?.translations?.ru?.label || reward?.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      description: reward?.translations?.ru?.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è',
      price: reward?.price ?? 0
    };

    res.json(formattedReward);
  } catch (error) {
    console.error('Award details error:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥—ã' });
  }
});

export default router;
