import express from 'express';
import { MongoClient } from 'mongodb';
import cors from 'cors';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import path from 'path';
import fs from 'fs';
import dotenv from 'dotenv';
import authRoutes from './routes/auth';
import userRoutes from './routes/users';
import rewardRoutes from './routes/rewards';
import adminRoutes from './routes/admin';
import { authenticateToken } from './middleware/auth';
import { requireAdmin } from './middleware/roles';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.dev —Ñ–∞–π–ª–∞
dotenv.config({ path: '.env.dev' });

const app = express();
const PORT = parseInt(process.env.PORT || '3000', 10);

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Express –¥–ª—è —Ä–∞–±–æ—Ç—ã –∑–∞ –ø—Ä–æ–∫—Å–∏ (Nginx)
app.set('trust proxy', 1);

// –®–∞–≥ 1: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π Helmet —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞—â–∏—Ç–∞–º–∏
app.use(helmet({
  contentSecurityPolicy: false, // –û—Ç–∫–ª—é—á–∞–µ–º CSP –ø–æ–∫–∞ —á—Ç–æ
  crossOriginEmbedderPolicy: false, // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è OAuth
  crossOriginOpenerPolicy: false,   // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è OAuth popup
  crossOriginResourcePolicy: false, // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è OAuth
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  hsts: {
    maxAge: 31536000, // 1 –≥–æ–¥
    includeSubDomains: true,
    preload: true
  },
  noSniff: true, // –ó–∞–ø—Ä–µ—â–∞–µ–º MIME-type sniffing
  frameguard: { action: 'deny' }, // –ó–∞–ø—Ä–µ—â–∞–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ iframe
  xssFilter: true, // –í–∫–ª—é—á–∞–µ–º XSS —Ñ–∏–ª—å—Ç—Ä –±—Ä–∞—É–∑–µ—Ä–∞
  referrerPolicy: { policy: 'strict-origin-when-cross-origin' },
  dnsPrefetchControl: true, // –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º DNS prefetch
  ieNoOpen: true, // –ó–∞—â–∏—Ç–∞ –æ—Ç IE
  hidePoweredBy: true // –°–∫—Ä—ã–≤–∞–µ–º X-Powered-By
}));

// –®–∞–≥ 2: –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π CORS —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏ –¥–ª—è OAuth
const allowedOrigins = [
  'https://bugacity-npm.ru.tuna.am',
  'https://bugacity-docker.ru.tuna.am', 
  'https://gluko.city',
  'http://localhost:3000',
  'http://localhost:3001',
  'http://localhost:8080'
];

app.use(cors({
  origin: function (origin, callback) {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ origin (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, Postman)
    if (!origin) return callback(null, true);
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
    const oauthDomains = [
      'oauth.yandex.ru',
      'login.yandex.ru', 
      'oauth.vk.com',
      'api.vk.com'
    ];
    
    if (oauthDomains.some(domain => origin.includes(domain))) {
      return callback(null, true);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º whitelist –¥–æ–º–µ–Ω–æ–≤
    if (allowedOrigins.indexOf(origin) !== -1) {
      callback(null, true);
    } else {
      console.warn(`üö´ CORS –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è origin: ${origin}`);
      callback(new Error('–ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ CORS –ø–æ–ª–∏—Ç–∏–∫–æ–π'));
    }
  },
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: [
    'Content-Type', 
    'Authorization', 
    'X-Requested-With',
    'Accept',
    'Origin',
    'Cache-Control'
  ],
  exposedHeaders: ['X-Total-Count'], // –ó–∞–≥–æ–ª–æ–≤–∫–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—É
  maxAge: 86400, // –ö—ç—à–∏—Ä—É–µ–º preflight –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ 24 —á–∞—Å–∞
  optionsSuccessStatus: 200 // –î–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
}));

// –®–∞–≥ 3: Rate Limiting —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏ –¥–ª—è OAuth –∏ dev –æ–∫—Ä—É–∂–µ–Ω–∏—è
const isDevelopment = process.env.NODE_ENV === 'development';
const disableRateLimit = isDevelopment || process.env.DISABLE_RATE_LIMIT === 'true';

// –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ rate limiting
if (disableRateLimit) {
  const reason = isDevelopment ? 'dev —Ä–µ–∂–∏–º' : 'DISABLE_RATE_LIMIT=true';
  console.log(`üîì Rate limiting –æ—Ç–∫–ª—é—á–µ–Ω (${reason})`);
} else {
  console.log('üîí Rate limiting –≤–∫–ª—é—á–µ–Ω (–ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º)');
}

// Rate limiting —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if (!disableRateLimit) {
  const limiter = rateLimit({
    windowMs: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞
    max: 3, // –º–∞–∫—Å–∏–º—É–º 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥—É (–∫–∞–∫ —É VK)
    message: {
      error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
      retryAfter: '1 —Å–µ–∫—É–Ω–¥–∞'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skip: (req) => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º OAuth callback endpoints, OAuth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ API –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
      return req.path.includes('/api/auth/callback') || 
             req.path.includes('/api/auth/oauth') ||
             req.path.includes('/api/auth/yandex') ||
             req.path.includes('/api/auth/vk') ||
             req.path.includes('/api/meta') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
             req.path.includes('/api/rewards/') && req.path.includes('/preview') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
             req.path.includes('/api/rewards') && req.method === 'GET' || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ GET –∑–∞–ø—Ä–æ—Å—ã –∫ –Ω–∞–≥—Ä–∞–¥–∞–º
             req.path.includes('/images/') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
             req.path.includes('/fonts/') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —à—Ä–∏—Ñ—Ç—ã
             req.path.includes('/models/') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º 3D –º–æ–¥–µ–ª–∏
             req.path.includes('/textures/') || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—ã
             req.path === '/' || // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
             req.path.includes('?user=') && req.path.includes('&reward='); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Å—ã–ª–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–∞–≥—Ä–∞–¥
    }
  });

  app.use(limiter);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ limiter –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–±—Ä–æ—Å–∞
  app.locals.limiter = limiter;
}

// Auth rate limiting —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if (!disableRateLimit) {
  const authLimiter = rateLimit({
    windowMs: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
    max: 10, // –º–∞–∫—Å–∏–º—É–º 10 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ –∑–∞ 5 –º–∏–Ω—É—Ç (–±–æ–ª–µ–µ —Ä–∞–∑—É–º–Ω–æ)
    message: {
      error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
      retryAfter: '5 –º–∏–Ω—É—Ç'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skip: (req) => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º OAuth endpoints
      return req.path.includes('/api/auth/callback') || 
             req.path.includes('/api/auth/oauth') ||
             req.path.includes('/api/auth/yandex') ||
             req.path.includes('/api/auth/vk');
    }
  });

  app.use('/api/auth/login', authLimiter);
  app.use('/api/auth/register', authLimiter);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ authLimiter –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–±—Ä–æ—Å–∞
  app.locals.authLimiter = authLimiter;
}

app.use(express.json());
app.use(express.static(path.join(process.cwd(), 'client/public')));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–æ—É—Ç –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));



// MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
let mongoUri = process.env.MONGODB_URI;
if (!mongoUri) {
  // –ß–∏—Ç–∞–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞ (–¥–ª—è Docker secrets)
  let mongodbPassword = 'bugacity_password'; // –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
  if (process.env.MONGODB_PASSWORD_FILE && fs.existsSync(process.env.MONGODB_PASSWORD_FILE)) {
    mongodbPassword = fs.readFileSync(process.env.MONGODB_PASSWORD_FILE, 'utf8').trim();
  } else if (process.env.MONGODB_PASSWORD) {
    mongodbPassword = process.env.MONGODB_PASSWORD;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const isDevelopment = process.env.NODE_ENV === 'development';
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è MONGODB_HOST –∏–ª–∏ IP-–∞–¥—Ä–µ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const mongoHost = process.env.MONGODB_HOST || (isDevelopment ? '172.18.0.4' : 'bugacity_mongodb');
  console.log(`[DB] NODE_ENV: ${process.env.NODE_ENV}, isDevelopment: ${isDevelopment}, mongoHost: ${mongoHost}`);
  mongoUri = `mongodb://bugacity_user:${mongodbPassword}@${mongoHost}:27017/bugacity?authSource=bugacity`;
}

console.log('[DB] Connecting to MongoDB using URI:', mongoUri);
async function connectWithRetry(attempt = 1): Promise<void> {
  try {
    const client = await MongoClient.connect(mongoUri as string, { maxPoolSize: 10 });
    const db = client.db('bugacity');
    (app as any).locals.db = db;
    console.log('[DB] Connected to MongoDB (attempt', attempt, ')');
  } catch (err: any) {
    console.error('[DB] Connection error (attempt', attempt, '):', err?.message || err);
    if (attempt < 20) {
      setTimeout(() => connectWithRetry(attempt + 1), 1000);
    }
  }
}
connectWithRetry();

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/auth', authRoutes);
app.use('/api/users', userRoutes);
app.use('/api/rewards', rewardRoutes);
app.use('/api/admin', adminRoutes);

// –í—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
app.get('/api/debug/db', async (_req, res) => {
  try {
    const db: any = (app as any).locals.db;
    if (!db) {
      return res.status(503).json({ status: 'no-db' });
    }
    const cols = await db.listCollections().toArray();
    const awardsCount = await db.collection('awards').countDocuments().catch(() => null);
    return res.json({ status: 'ok', database: db.databaseName, collections: cols.map((c: any) => c.name), awardsCount });
  } catch (e: any) {
    return res.status(500).json({ status: 'error', message: e?.message });
  }
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  const htmlPath = path.join(process.cwd(), 'client/public/index.html');
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ
  const htmlContent = fs.readFileSync(htmlPath, 'utf8');
  res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');
  res.setHeader('Pragma', 'no-cache');
  res.setHeader('Expires', '0');
  res.send(htmlContent);
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
app.get('/login', (req, res) => {
  res.sendFile(path.join(process.cwd(), 'client/public/index.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
app.get('/auth', (req, res) => {
  res.sendFile(path.join(process.cwd(), 'client/public/index.html'));
});

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
app.get('/admin/scene', (req, res) => {
  res.sendFile(path.join(process.cwd(), 'client/public/index.html'));
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ HDR —Ñ–∞–π–ª–æ–≤
app.get('/api/hdri-files', (req, res) => {
  try {
    const hdriPath = path.join(process.cwd(), 'client/public/textures/environment');
    
    const files = fs.readdirSync(hdriPath);
    const hdrFiles = files.filter(file => file.toLowerCase().endsWith('.hdr'));
    
    res.json(hdrFiles);
  } catch (error) {
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤' });
  }
});

// –ê–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º HTML, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –∫–ª–∏–µ–Ω—Ç–µ
app.get('/admin', (req, res) => {
  res.sendFile(path.join(process.cwd(), 'client/public/index.html'));
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(`Server running on port ${PORT}`);
});
