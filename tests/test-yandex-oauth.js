const { chromium } = require('playwright');
const config = require('./config');
const path = require('path');

// –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞
const PROFILE_PATH = path.resolve(__dirname, '..', 'browser-profile');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
async function logoutUser(page) {
  console.log(`üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã...`);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const isLoggedIn = await page.isVisible('.user-menu, .logout-button');
    if (!isLoggedIn) {
      console.log(`‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`);
      return true;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
    const rewardModalVisible = await page.isVisible('.modal-overlay');
    if (rewardModalVisible) {
      console.log('üö™ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...');
      await page.keyboard.press('Escape');
      await page.waitForTimeout(500);
    }
    
    // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await page.click('.user-menu, .logout-button');
    await page.waitForTimeout(500);
    
    // –ù–∞–∂–∏–º–∞–µ–º "–í—ã–π—Ç–∏"
    await page.click('button:has-text("–í—ã–π—Ç–∏"), .logout-button');
    await page.waitForTimeout(800);
    
    console.log(`‚úÖ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–µ–Ω`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth
async function testYandexLogin(page) {
  console.log(`\nüîµ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth`);
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const isLoggedIn = await page.isVisible('.user-menu, .logout-button');
    if (isLoggedIn) {
      console.log(`‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º Yandex OAuth`);
      return true;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modalOpen = await page.isVisible('.auth-modal');
    if (!modalOpen) {
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ
      await page.click('.login-button');
      await page.waitForSelector('.auth-modal', { timeout: 5000 });
    }
    
    // –î–∞–µ–º –≤—Ä–µ–º—è –±—Ä–∞—É–∑–µ—Ä—É "–æ—Å–≤–æ–∏—Ç—å—Å—è" –ø–µ—Ä–µ–¥ OAuth
    console.log('‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ OAuth...');
    await page.waitForTimeout(3000);
    
    // –°—Ä–∞–∑—É –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Yandex (–±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π)
    console.log('üîµ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å"...');
    await page.click('.social-buttons-row button[title="–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å"]');
    
    // –ñ–¥–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è popup –æ–∫–Ω–∞
    console.log('‚è≥ –ñ–¥–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è popup –æ–∫–Ω–∞ Yandex...');
    const popupPromise = page.waitForEvent('popup', { timeout: 10000 });
    const popup = await popupPromise;
    console.log('‚úÖ Popup –æ–∫–Ω–æ Yandex –æ—Ç–∫—Ä—ã–ª–æ—Å—å');
    
    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ popup
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ popup...');
    console.log('‚ÑπÔ∏è  –£ –≤–∞—Å –µ—Å—Ç—å 90 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ Yandex');
    
    try {
      // –ñ–¥–µ–º, –ø–æ–∫–∞ popup –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∏–ª–∏ –∏—Å—Ç–µ—á–µ—Ç timeout
      await popup.waitForEvent('close', { timeout: 90000 });
      console.log(`‚úÖ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth —É—Å–ø–µ—à–µ–Ω - popup –∑–∞–∫—Ä—ã–ª—Å—è`);
      return true;
    } catch (error) {
      console.log(`‚ùå –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth –Ω–µ —É–¥–∞–ª—Å—è - popup –Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 90 —Å–µ–∫—É–Ω–¥`);
      console.log(`‚ÑπÔ∏è  –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ popup –æ–∫–Ω–µ`);
      await popup.close();
      return false;
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Yandex OAuth: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
async function runYandexOAuthTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth');
  console.log('=====================================');
  console.log(`üìÅ –ü—Ä–æ—Ñ–∏–ª—å: ${PROFILE_PATH}`);
  console.log(`üåê URL: ${config.api.baseUrl}`);
  console.log('=====================================');

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const browserOptions = {
    headless: config.browser.headless,
    slowMo: config.browser.slowMo,
    timeout: config.browser.timeout
  };

  // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
  if (config.browser.disableCache) {
    browserOptions.args = [
      '--disable-application-cache',
      '--disable-offline-load-stale-cache',
      '--disable-background-networking',
      '--disable-background-timer-throttling',
      '--disable-backgrounding-occluded-windows',
      '--disable-renderer-backgrounding',
      '--disable-features=TranslateUI',
      '--disable-ipc-flooding-protection',
      '--aggressive-cache-discard'
    ];
    console.log('üö´ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω');
  }

  const context = await chromium.launchPersistentContext(PROFILE_PATH, browserOptions);
  const page = context.pages()[0] || await context.newPage();

  // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  page.on('console', msg => {
    if (msg.type() === 'error' || msg.text().includes('OAuth') || msg.text().includes('auth')) {
      console.log(`üìù [${msg.type()}] ${msg.text()}`);
    }
  });

  page.on('pageerror', error => {
    console.log(`‚ùå [ERROR] ${error.message}`);
  });

  page.on('request', request => {
    if (request.url().includes('oauth') || request.url().includes('auth') || request.url().includes('vk.com') || request.url().includes('yandex.ru')) {
      console.log(`üåê [REQUEST] ${request.method()} ${request.url()}`);
    }
  });

  page.on('response', response => {
    if (response.url().includes('oauth') || response.url().includes('auth') || response.url().includes('vk.com') || response.url().includes('yandex.ru')) {
      console.log(`üì° [RESPONSE] ${response.status()} ${response.url()}`);
    }
  });

  try {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç
    await page.goto(config.api.baseUrl);
    console.log(`üåê –û—Ç–∫—Ä—ã—Ç —Å–∞–π—Ç: ${config.api.baseUrl}`);

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–µ—Å–ª–∏ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã)
    console.log('üö™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞...');
    await logoutUser(page);
    
    // 2. –ù–ï –æ—á–∏—â–∞–µ–º localStorage –∏ sessionStorage - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é Yandex
    console.log('‚ÑπÔ∏è  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é Yandex –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth
    const result = await testYandexLogin(page);
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=====================================');
    console.log(`üîµ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth: ${result ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
    
    if (result) {
      console.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
    } else {
      console.log('‚ö†Ô∏è  –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù');
      console.log('‚ÑπÔ∏è  –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ popup –æ–∫–Ω–µ');
    }
    
    return result;

  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', error);
  } finally {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    await context.close();
    console.log(`üíæ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${PROFILE_PATH}`);
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  const command = process.argv[2];
  
  switch (command) {
    case 'test':
      await runYandexOAuthTest();
      break;
    default:
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-yandex-oauth.js test');
      break;
  }
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { runYandexOAuthTest, testYandexLogin };
