const { chromium } = require('playwright');
const config = require('./config');
const path = require('path');

// –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞
const PROFILE_PATH = path.resolve(__dirname, '..', 'browser-profile');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async function deleteUserFromDB(email) {
  try {
    console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${email} –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
    let token = null;
    const passwords = ['111', '111111a', '111111'];
    
    for (const password of passwords) {
      try {
        const loginResponse = await fetch(`${config.api.baseUrl}/api/auth/login`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password })
        });
        
        if (loginResponse.ok) {
          const loginData = await loginResponse.json();
          token = loginData.token;
          console.log(`üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–∞—Ä–æ–ª–µ–º: ${password}`);
          break;
        }
      } catch (loginError) {
        console.log(`‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º: ${password}`);
      }
    }
    
    if (!token) {
      console.log(`‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∏ —Å –æ–¥–Ω–∏–º –ø–∞—Ä–æ–ª–µ–º`);
    }
    
    // –¢–µ–ø–µ—Ä—å –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const headers = { 'Content-Type': 'application/json' };
    if (token) {
      headers['Authorization'] = `Bearer ${token}`;
    }
    
    const response = await fetch(`${config.api.baseUrl}/api/auth/delete-user`, {
      method: 'POST',
      headers,
      body: JSON.stringify({ email })
    });
    
    const result = await response.json();
    console.log(`üì° –û—Ç–≤–µ—Ç API: ${JSON.stringify(result)}`);
    
    if (response.ok) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
    } else {
      console.log(`‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
async function logoutUser(page) {
  console.log(`üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã...`);
  
  try {
    // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ API (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω)
    const token = await page.evaluate(() => localStorage.getItem('token'));
    if (token) {
      console.log('üö™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ API...');
      try {
        await fetch(`${config.api.baseUrl}/api/auth/logout`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });
        console.log('‚úÖ API –≤—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      } catch (apiError) {
        console.log('‚ÑπÔ∏è  API –≤—ã—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —á–µ—Ä–µ–∑ UI');
      }
    }
    
    // 2. –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
    await page.evaluate(() => {
      localStorage.clear();
      sessionStorage.clear();
    });
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—á–∏—â–µ–Ω–æ');
    
    // 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.reload({ waitUntil: 'networkidle' });
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const isLoggedIn = await page.isVisible('.user-menu, .logout-button');
    if (!isLoggedIn) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`);
      return true;
    }
    
    // 5. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ —á–µ—Ä–µ–∑ UI
    console.log('üö™ –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ —á–µ—Ä–µ–∑ UI...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
    const rewardModalVisible = await page.isVisible('.modal-overlay');
    if (rewardModalVisible) {
      console.log('üö™ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...');
      await page.keyboard.press('Escape');
      await page.waitForTimeout(500);
    }
    
    // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await page.click('.user-menu, .logout-button');
    await page.waitForTimeout(500);
    
    // –ù–∞–∂–∏–º–∞–µ–º "–í—ã–π—Ç–∏"
    await page.click('button:has-text("–í—ã–π—Ç–∏"), .logout-button');
    await page.waitForTimeout(800);
    
    console.log(`‚úÖ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–µ–Ω`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π
async function testPasswordValidation(page, email, password, expectedError) {
  console.log(`üîí –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å: "${password}" (–æ–∂–∏–¥–∞–µ–º: "${expectedError}")`);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modalVisible = await page.isVisible('.auth-modal');
    
    if (!modalVisible) {
      // –ï—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
      await page.click('.login-button');
      await page.waitForTimeout(1000);

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" - –∏—Å–ø–æ–ª—å–∑—É–µ–º XPath —Å–µ–ª–µ–∫—Ç–æ—Ä
      await page.click('//*[@id="root"]/div/div[3]/div/button[2]');
      await page.waitForTimeout(500);

      // –ó–∞–ø–æ–ª–Ω—è–µ–º email –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
      await page.fill('input[type="email"]', email);
      await page.press('input[type="email"]', 'Enter');
      await page.waitForTimeout(2000);

      // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º XPath —Å–µ–ª–µ–∫—Ç–æ—Ä
      await page.fill('//*[@id="root"]/div/div[3]/div/form/div[1]/div[2]/input', '111111');
      await page.press('//*[@id="root"]/div/div[3]/div/form/div[1]/div[2]/input', 'Enter');
      await page.waitForTimeout(2000);
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    await page.fill('input[type="password"]', password);
    await page.press('input[type="password"]', 'Enter');
    await page.waitForTimeout(500);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const messageElement = await page.locator('.message.error');
    const messageText = await messageElement.textContent();
    
    if (expectedError === null) {
      // –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å –ø—Ä–æ–π–¥–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é (–Ω–µ—Ç –æ—à–∏–±–∫–∏)
      if (!messageText || messageText.trim() === '') {
        console.log(`‚úÖ –ü–∞—Ä–æ–ª—å "${password}" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—è–≤–∏–ª–æ—Å—å –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        const confirmPasswordField = await page.locator('#root > div > div.auth-modal-overlay > div > form > div.form-fields-container > div.form-field.slide-in > input[type=password]');
        const isVisible = await confirmPasswordField.isVisible();
        if (isVisible) {
          console.log(`‚úÖ –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø–æ—è–≤–∏–ª–æ—Å—å`);
          
          // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
          await confirmPasswordField.fill(password);
          console.log(`‚úÖ –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–æ`);
          
          await page.waitForTimeout(200);
          return true;
        } else {
          console.log(`‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å`);
          await page.waitForTimeout(200);
          return false;
        }
      } else {
        console.log(`‚ùå –û–®–ò–ë–ö–ê: –ü–∞—Ä–æ–ª—å "${password}" –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø—Ä–æ–π—Ç–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É: "${messageText}"`);
        await page.waitForTimeout(200);
        return false;
      }
    } else {
      // –û–∂–∏–¥–∞–µ–º –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      if (messageText && messageText.includes(expectedError)) {
        console.log(`‚úÖ –ü–∞—Ä–æ–ª—å "${password}" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: ${messageText}`);
        await page.waitForTimeout(200);
        return true;
      } else {
        console.log(`‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–∏ "${expectedError}", –ø–æ–ª—É—á–∏–ª–∏ "${messageText || '–Ω–µ—Ç –æ—à–∏–±–∫–∏'}"`);
        await page.waitForTimeout(200);
        return false;
      }
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä–æ–ª—è "${password}":`, error.message);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    try {
      await page.click('.close-button');
      await page.waitForTimeout(500);
    } catch (closeError) {
      console.log('‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
    }
    
    return false;
  }
}

async function testEmailRegistration(page, email, password) {
  console.log(`\nüìß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email: ${email}`);
  
  try {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ª—é–±—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    const modalVisibleReg = await page.isVisible('.auth-modal');
    if (modalVisibleReg) {
      await page.keyboard.press('Escape');
      await page.waitForTimeout(800);
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.click('.login-button');
    await page.waitForSelector('.auth-modal', { timeout: 5000 });
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–∂–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    await page.click('#root > div > div.auth-modal-overlay > div > button:nth-child(4)');
    await page.waitForTimeout(500);
    
    // –®–∞–≥ 1: –ó–∞–ø–æ–ª–Ω—è–µ–º email –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    console.log('üìù –®–∞–≥ 1: –ó–∞–ø–æ–ª–Ω—è–µ–º email...');
    await page.fill('#root > div > div.auth-modal-overlay > div > form > div > div > input[type=email]', email);
    
    console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter...');
    await page.keyboard.press('Enter');
    await page.waitForTimeout(800);
    
    // –®–∞–≥ 2: –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (111111) –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    console.log('üìù –®–∞–≥ 2: –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
    await page.fill('#root > div > div.auth-modal-overlay > div > form > div.form-fields-container > div.form-field.slide-in > input[type=text]', '111111');
    
    console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter...');
    await page.keyboard.press('Enter');
    await page.waitForTimeout(800);
    
    // –®–∞–≥ 3: –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    console.log('üìù –®–∞–≥ 3: –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä–æ–ª—å...');
    await page.fill('#root > div > div.auth-modal-overlay > div > form > div.form-fields-container > div.form-field.slide-in > input[type=password]', password);
    
    console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter...');
    await page.keyboard.press('Enter');
    await page.waitForTimeout(800);
    
    // –®–∞–≥ 4: –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    console.log('üìù –®–∞–≥ 4: –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å...');
    await page.fill('#root > div > div.auth-modal-overlay > div > form > div.form-fields-container > div.form-field.slide-in > input[type=password]', password);
    
    console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    await page.keyboard.press('Enter');
    
    // –ñ–¥–µ–º —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å—Å—è
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    try {
      // –ñ–¥–µ–º, –ø–æ–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è (–º–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥)
      await page.waitForSelector('.auth-modal', { state: 'hidden', timeout: 10000 });
      console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email —É—Å–ø–µ—à–Ω–∞ - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–ª–æ—Å—å`);
      
      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
      console.log('üîç –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏...');
      try {
        await page.waitForSelector('.modal-overlay', { timeout: 5000 });
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ—è–≤–∏–ª–æ—Å—å');
        
        console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é...');
        await page.fill('#root > div > div.modal-overlay > div > form > input[type=text]', '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö—É–±–æ—Ä');
        
        console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å –∏–º–µ–Ω–µ–º...');
        await page.keyboard.press('Enter');
        await page.waitForTimeout(800);
        
        console.log('‚úÖ –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
        console.log('üèÜ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π...');
        try {
          // –ö–ª–∏–∫–∞–µ–º –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –∫—Ä–æ–º–µ canvas –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
          await page.click('header', { timeout: 1000 });
          await page.waitForTimeout(500);
          console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –∑–∞–∫—Ä—ã—Ç–æ');
        } catch (error) {
          console.log('‚ÑπÔ∏è  –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —É–∂–µ –∑–∞–∫—Ä—ã—Ç–æ');
        }
        
        // –†–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã
        console.log('üö™ –†–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã...');
        await logoutUser(page);
      } catch (error) {
        console.log('‚ÑπÔ∏è  –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥');
      }
      
      return true;
    } catch (error) {
      // –ï—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
      const successMessage = await page.isVisible('.message.success');
      const errorMessage = await page.isVisible('.message.error');
      
      if (successMessage) {
        console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email —É—Å–ø–µ—à–Ω–∞ - –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ`);
        return true;
      } else if (errorMessage) {
        console.log(`‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email –Ω–µ —É–¥–∞–ª–∞—Å—å - –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ`);
        return false;
      } else {
        console.log(`‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email –Ω–µ —É–¥–∞–ª–∞—Å—å - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å`);
        return false;
      }
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
async function runEmailRegistrationTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email');
  console.log('=====================================');
  console.log(`üìÅ –ü—Ä–æ—Ñ–∏–ª—å: ${PROFILE_PATH}`);
  console.log(`üåê URL: ${config.api.baseUrl}`);
  console.log('=====================================');

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const browserOptions = {
    headless: config.browser.headless,
    slowMo: config.browser.slowMo,
    timeout: config.browser.timeout
  };

  // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
  if (config.browser.disableCache) {
    browserOptions.args = [
      '--disable-application-cache',
      '--disable-offline-load-stale-cache',
      '--disable-background-networking',
      '--disable-background-timer-throttling',
      '--disable-backgrounding-occluded-windows',
      '--disable-renderer-backgrounding',
      '--disable-features=TranslateUI',
      '--disable-ipc-flooding-protection',
      '--aggressive-cache-discard'
    ];
    console.log('üö´ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω');
  }

  const context = await chromium.launchPersistentContext(PROFILE_PATH, browserOptions);
  const page = context.pages()[0] || await context.newPage();

  // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  page.on('console', msg => {
    if (msg.type() === 'error' || msg.text().includes('OAuth') || msg.text().includes('auth')) {
      console.log(`üìù [${msg.type()}] ${msg.text()}`);
    }
  });

  page.on('pageerror', error => {
    console.log(`‚ùå [ERROR] ${error.message}`);
  });

  page.on('request', request => {
    if (request.url().includes('oauth') || request.url().includes('auth') || request.url().includes('vk.com') || request.url().includes('yandex.ru')) {
      console.log(`üåê [REQUEST] ${request.method()} ${request.url()}`);
    }
  });

  page.on('response', response => {
    if (response.url().includes('oauth') || response.url().includes('auth') || response.url().includes('vk.com') || response.url().includes('yandex.ru')) {
      console.log(`üì° [RESPONSE] ${response.status()} ${response.url()}`);
    }
  });

  try {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç
    await page.goto(config.api.baseUrl);
    console.log(`üåê –û—Ç–∫—Ä—ã—Ç —Å–∞–π—Ç: ${config.api.baseUrl}`);

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // 1. –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await deleteUserFromDB('sdiz@ya.ru');
    
    // 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–µ—Å–ª–∏ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã)
    console.log('üö™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞...');
    await logoutUser(page);
    
    // 3. –ù–ï –æ—á–∏—â–∞–µ–º localStorage –∏ sessionStorage - —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('‚ÑπÔ∏è  –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...');
    
    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–∞—Ä–æ–ª–µ–π
    console.log('\nüîí –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò –ü–ê–†–û–õ–ï–ô:');
    console.log('=====================================');
    
    const passwordTests = [
      { password: '111', expectedError: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' },
      { password: '111111', expectedError: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±—É–∫–≤—É' },
      { password: '111111a', expectedError: null } // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å, –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏
    ];
    
    let passwordTestsPassed = 0;
    for (const test of passwordTests) {
      const passed = await testPasswordValidation(page, 'sdiz@ya.ru', test.password, test.expectedError);
      if (passed) passwordTestsPassed++;
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π: ${passwordTestsPassed}/${passwordTests.length} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email
    const result = await testEmailRegistration(page, 'sdiz@ya.ru', '111111a');
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=====================================');
    console.log(`üìß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email: ${result ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
    
    if (result) {
      console.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
    } else {
      console.log('‚ö†Ô∏è  –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù');
    }
    
    return result;

  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', error);
  } finally {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    await context.close();
    console.log(`üíæ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${PROFILE_PATH}`);
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  await runEmailRegistrationTest();
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { runEmailRegistrationTest, testEmailRegistration, testPasswordValidation };
