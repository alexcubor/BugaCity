const { chromium } = require('playwright');
const path = require('path');
const Imap = require('imap');
const { simpleParser } = require('mailparser');

// –ó–∞–≥—Ä—É–∂–∞–µ–º config –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
function getConfig() {
  return require('./config');
}

// –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞
const PROFILE_PATH = path.resolve(__dirname, '..', 'browser-profile');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –ø–æ—á—Ç—ã
const getVerificationCodeFromEmail = async () => {
  return new Promise((resolve, reject) => {
    // –¢–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
    const timeout = setTimeout(() => {
      imap.end();
      reject(new Error('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–¥–∞ —Å –ø–æ—á—Ç—ã (30 —Å–µ–∫)'));
    }, 30000);

    const imap = new Imap({
      user: getConfig().testAccount.email,
      password: getConfig().testAccount.password,
      host: 'mail.jino.ru',
      port: 993,
      tls: true,
      tlsOptions: { rejectUnauthorized: false }
    });

    imap.once('ready', () => {
      imap.openBox('INBOX', false, (err, box) => {
        if (err) {
          reject(err);
          return;
        }

        // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–∏—Å—å–º–∞ (—Å–Ω–∞—á–∞–ª–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ, –ø–æ—Ç–æ–º –≤—Å–µ)
        console.log('üîç –ò—â–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ –æ—Ç hello@gluko.city...');
        imap.search(['UNSEEN', ['FROM', 'hello@gluko.city']], (err, results) => {
          if (err) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º:', err.message);
            clearTimeout(timeout);
            imap.end();
            reject(err);
            return;
          }
          
          if (results.length === 0) {
            // –ï—Å–ª–∏ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∏—â–µ–º –≤—Å–µ –ø–∏—Å—å–º–∞ –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            console.log('üìß –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º –Ω–µ—Ç, –∏—â–µ–º –≤—Å–µ –ø–∏—Å—å–º–∞ –æ—Ç hello@gluko.city...');
            imap.search([['FROM', 'hello@gluko.city']], (err2, results2) => {
              if (err2) {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–∏—Å–µ–º:', err2.message);
                clearTimeout(timeout);
                imap.end();
                reject(err2);
                return;
              }
              
              if (results2.length === 0) {
                console.log('‚ùå –ü–∏—Å–µ–º –æ—Ç hello@gluko.city –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                clearTimeout(timeout);
                imap.end();
                reject(new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º —Å –∫–æ–¥–æ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏'));
                return;
              }
              
              console.log(`üìß –ù–∞–π–¥–µ–Ω–æ ${results2.length} –ø–∏—Å–µ–º –æ—Ç hello@gluko.city`);
              processMessages(results2);
            });
          } else {
            console.log(`üìß –ù–∞–π–¥–µ–Ω–æ ${results.length} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º –æ—Ç hello@gluko.city`);
            processMessages(results);
          }
        });

        function processMessages(results) {
          console.log(`üìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${results.length} –ø–∏—Å–µ–º...`);
          const messageId = results.slice(-1)[0]; // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–∏—Å—å–º–æ
          console.log(`üìß –ë–µ—Ä–µ–º –ø–∏—Å—å–º–æ —Å ID: ${messageId}`);
          const fetch = imap.fetch(messageId, { bodies: '' });
          
          fetch.on('message', (msg, seqno) => {
            console.log(`üìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∏—Å—å–º–æ ${seqno}...`);
            msg.on('body', (stream, info) => {
              console.log(`üìß –ü–∞—Ä—Å–∏–º —Ç–µ–ª–æ –ø–∏—Å—å–º–∞...`);
              simpleParser(stream, (err, parsed) => {
                if (err) {
                  console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–∏—Å—å–º–∞:`, err.message);
                  reject(err);
                  return;
                }

                const text = parsed.text || '';
                console.log(`üìß –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞ (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):`, text.substring(0, 200));
                
                const codeMatch = text.match(/–∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏[:\s]*(\d{6})/i) || 
                                 text.match(/verification code[:\s]*(\d{6})/i) ||
                                 text.match(/(\d{6})/);

                console.log(`üîç –ù–∞–π–¥–µ–Ω–Ω—ã–π –∫–æ–¥:`, codeMatch ? codeMatch[1] : '–Ω–µ –Ω–∞–π–¥–µ–Ω');

                if (codeMatch) {
                  console.log(`‚úÖ –ö–æ–¥ –Ω–∞–π–¥–µ–Ω: ${codeMatch[1]}`);
                  clearTimeout(timeout);
                  resolve(codeMatch[1]);
                  imap.end();
                } else {
                  clearTimeout(timeout);
                  imap.end();
                  reject(new Error('–ö–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∏—Å—å–º–µ'));
                }
              });
            });
          });

          fetch.once('error', (err) => {
            clearTimeout(timeout);
            imap.end();
            reject(err);
          });

          fetch.once('end', () => {
            if (!imap._ended) {
              imap.end();
            }
          });
        }
      });
    });

    imap.once('error', (err) => {
      clearTimeout(timeout);
      reject(err);
    });

    imap.connect();
  });
};


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async function deleteUserFromDB(email) {
  try {
    console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${email} –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
    let token = null;
    const passwords = ['111', getConfig().testAccount.password, '111111'];
    
    for (const password of passwords) {
      try {
        const loginResponse = await fetch(`${getConfig().baseUrl}/api/auth/login`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password })
        });
        
        if (loginResponse.ok) {
          const loginData = await loginResponse.json();
          token = loginData.token;
          console.log(`üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–∞—Ä–æ–ª–µ–º: ${password}`);
          break;
        }
      } catch (loginError) {
        console.log(`‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º: ${password}`);
      }
    }
    
    if (!token) {
      console.log(`‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∏ —Å –æ–¥–Ω–∏–º –ø–∞—Ä–æ–ª–µ–º`);
    }
    
    // –¢–µ–ø–µ—Ä—å –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const headers = { 'Content-Type': 'application/json' };
    if (token) {
      headers['Authorization'] = `Bearer ${token}`;
    }
    
    const response = await fetch(`${getConfig().baseUrl}/api/auth/delete-user`, {
      method: 'POST',
      headers,
      body: JSON.stringify({ email })
    });
    
    const result = await response.json();
    console.log(`üì° –û—Ç–≤–µ—Ç API: ${JSON.stringify(result)}`);
    
    if (response.ok) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
    } else {
      console.log(`‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
async function logoutUser(page) {
  console.log(`üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã...`);
  
  try {
    // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ API (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω)
    const token = await page.evaluate(() => localStorage.getItem('token'));
    if (token) {
      console.log('üö™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ API...');
      try {
        await fetch(`${getConfig().baseUrl}/api/auth/logout`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });
        console.log('‚úÖ API –≤—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      } catch (apiError) {
        console.log('‚ÑπÔ∏è  API –≤—ã—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —á–µ—Ä–µ–∑ UI');
      }
    }
    
    // 2. –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
    await page.evaluate(() => {
      localStorage.clear();
      sessionStorage.clear();
    });
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—á–∏—â–µ–Ω–æ');
    
    // 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.reload({ waitUntil: 'networkidle' });
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const isLoggedIn = await page.isVisible('.user-menu, .logout-button');
    if (!isLoggedIn) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`);
      return true;
    }
    
    // 5. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ —á–µ—Ä–µ–∑ UI
    console.log('üö™ –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ —á–µ—Ä–µ–∑ UI...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
    const rewardModalVisible = await page.isVisible('.modal-overlay');
    if (rewardModalVisible) {
      console.log('üö™ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...');
      await page.keyboard.press('Escape');
      await page.waitForTimeout(500);
    }
    
    // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await page.click('.user-menu, .logout-button');
    await page.waitForTimeout(500);
    
    // –ù–∞–∂–∏–º–∞–µ–º "–í—ã–π—Ç–∏"
    await page.click('button:has-text("–í—ã–π—Ç–∏"), .logout-button');
    await page.waitForTimeout(800);
    
    console.log(`‚úÖ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–µ–Ω`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π
async function testPasswordValidation(page, email, password, expectedError) {
  console.log(`üîí –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å: "${password}" (–æ–∂–∏–¥–∞–µ–º: "${expectedError}")`);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const currentUrl = page.url();
    if (!currentUrl.includes('/auth')) {
      // –ï—Å–ª–∏ –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Ç—É–¥–∞
      await page.goto(getConfig().baseUrl + '/auth');
      await page.waitForTimeout(1000);
    }

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.waitForSelector('.auth-form-container', { timeout: 5000 });

             // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –Ω–∞ –Ω–µ–π)
             const isLoginMode = await page.isVisible('button:has-text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")');
             if (isLoginMode) {
               await page.click('button:has-text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")');
               await page.waitForTimeout(500);
             }

             // –ó–∞–ø–æ–ª–Ω—è–µ–º email –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ)
             const emailField = await page.locator('input[type="email"]');
             const emailValue = await emailField.inputValue();
             if (!emailValue) {
               await page.fill('input[type="email"]', email);
               await page.press('input[type="email"]', 'Enter');
               await page.waitForTimeout(2000);
             }

             // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ)
             const codeField = await page.locator('input[type="text"]');
             const codeValue = await codeField.inputValue();
             if (!codeValue) {
               // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ –ø–æ—á—Ç—ã
               console.log('üìß –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ –ø–æ—á—Ç—ã...');
               const verificationCode = await getVerificationCodeFromEmail();
               console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω –∫–æ–¥: ${verificationCode}`);
               
               await page.fill('input[type="text"]', verificationCode);
               await page.press('input[type="text"]', 'Enter');
               await page.waitForTimeout(2000);
             }

             // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
             await page.fill('input[type="password"]', password);
             await page.press('input[type="password"]', 'Enter');
             await page.waitForTimeout(500);

    if (expectedError === null) {
      // –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å –ø—Ä–æ–π–¥–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é (–Ω–µ—Ç –æ—à–∏–±–∫–∏)
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞
      await page.waitForTimeout(1000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–æ—Å—å –ª–∏ –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
      const confirmPasswordField = await page.locator('//*[@id="root"]/div/div[1]/div/div/div/form/div/div[4]/input');
      const isVisible = await confirmPasswordField.isVisible();
      
      if (isVisible) {
        console.log(`‚úÖ –ü–∞—Ä–æ–ª—å "${password}" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é - –ø–æ—è–≤–∏–ª–æ—Å—å –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è`);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        await confirmPasswordField.fill(password);
        console.log(`‚úÖ –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–æ`);
        
        await page.waitForTimeout(200);
        return true;
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        const messageElement = await page.locator('.message.error');
        const errorMessage = await messageElement.textContent();
        if (errorMessage && errorMessage.trim() !== '') {
          console.log(`‚ùå –û–®–ò–ë–ö–ê: –ü–∞—Ä–æ–ª—å "${password}" –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø—Ä–æ–π—Ç–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É: "${errorMessage}"`);
        } else {
          console.log(`‚ùå –û–®–ò–ë–ö–ê: –ü–∞—Ä–æ–ª—å "${password}" –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é, –Ω–æ –ø–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å`);
        }
        await page.waitForTimeout(200);
        return false;
      }
    } else {
      // –û–∂–∏–¥–∞–µ–º –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      await page.waitForTimeout(1000); // –ñ–¥–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
      
      const messageElement = await page.locator('.message.error');
      const messageText = await messageElement.textContent();
      
      if (messageText && messageText.includes(expectedError)) {
        console.log(`‚úÖ –ü–∞—Ä–æ–ª—å "${password}" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: ${messageText}`);
        await page.waitForTimeout(200);
        return true;
      } else {
        console.log(`‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–∏ "${expectedError}", –ø–æ–ª—É—á–∏–ª–∏ "${messageText || '–Ω–µ—Ç –æ—à–∏–±–∫–∏'}"`);
        await page.waitForTimeout(200);
        return false;
      }
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä–æ–ª—è "${password}":`, error.message);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    try {
      await page.click('.close-button');
      await page.waitForTimeout(500);
    } catch (closeError) {
      console.log('‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
    }
    
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—è –∏–º–µ–Ω–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"
async function testNameInput(page) {
  console.log(`\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–µ –∏–º–µ–Ω–∏ –∏ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"`);
  
  try {
    console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é...');
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    const nameInputSelectors = [
      'input[placeholder="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è"]',
      'input[placeholder*="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è"]',
      'input[placeholder*="–∏–º—è" i]',
      'input[placeholder*="name" i]',
      'input[type="text"]',
      'input:not([type="email"]):not([type="password"])',
      '//*[@id="root"]/div[3]/div/form/input'
    ];
    
    let nameInputFound = false;
    for (const selector of nameInputSelectors) {
      try {
        await page.fill(selector, '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö—É–±–æ—Ä');
        console.log(`‚úÖ –ò–º—è –∑–∞–ø–æ–ª–Ω–µ–Ω–æ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
        nameInputFound = true;
        break;
      } catch (error) {
        console.log(`‚ÑπÔ∏è  –°–µ–ª–µ–∫—Ç–æ—Ä ${selector} –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª`);
      }
    }
    
    if (!nameInputFound) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏');
      return false;
    }
    
    console.log('‚å®Ô∏è –ù–∞–∂–∏–º–∞–µ–º Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å –∏–º–µ–Ω–µ–º...');
    await page.keyboard.press('Enter');
    console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã...');
    await page.waitForTimeout(2000);
    
    console.log('‚úÖ –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    
    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"
    console.log('üèÜ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"...');
    try {
      await page.click('button:has-text("–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É")', { timeout: 5000 });
      console.log('‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π...');
      await page.waitForTimeout(3000);
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É" –Ω–∞–∂–∞—Ç–∞');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ö–Ω–æ–ø–∫–∞ "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –Ω–∞–∂–∞—Ç–∞');
    }
    
    // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π - –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    console.log('üèÜ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
    console.log('‚è≥ –ñ–¥–µ–º –µ—â–µ 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    await page.waitForTimeout(5000);
    
    // –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
    console.log('‚úÖ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—è –∏–º–µ–Ω–∏: ${error.message}`);
    return false;
  }
}

async function testEmailRegistration(page, email, password) {
  console.log(`\nüìß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email: ${email}`);
  
  try {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ª—é–±—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    const modalVisibleReg = await page.isVisible('.auth-modal');
    if (modalVisibleReg) {
      await page.keyboard.press('Escape');
      await page.waitForTimeout(800);
    }
    
    // –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É–∂–µ –≤–∏–¥–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /auth
    await page.waitForSelector('.auth-form-container', { timeout: 5000 });
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
    const isLoginMode = await page.isVisible('button:has-text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")');
    if (isLoginMode) {
      console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–∂–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
      await page.click('button:has-text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")');
      await page.waitForTimeout(500);
    } else {
      console.log('‚ÑπÔ∏è  –£–∂–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    }
    
    // –í—Å–µ –ø–æ–ª—è —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('üîò –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    await page.click('button[type="submit"]');
    
    // –ñ–¥–µ–º —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å—Å—è
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    try {
      // –ñ–¥–µ–º, –ø–æ–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è (–º–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥)
      await page.waitForSelector('.auth-modal', { state: 'hidden', timeout: 10000 });
      console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email —É—Å–ø–µ—à–Ω–∞ - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–ª–æ—Å—å`);
      
      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
      console.log('üîç –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏...');
      console.log('‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ...');
      await page.waitForTimeout(3000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL:', page.url());
      
      // –ò—â–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      const modalSelectors = [
        '.modal-overlay',
        '.modal',
        '[role="dialog"]',
        '.dialog',
        '.popup',
        '.overlay'
      ];
      
      let modalFound = false;
      for (const selector of modalSelectors) {
        try {
          await page.waitForSelector(selector, { timeout: 2000 });
          console.log(`‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
          modalFound = true;
          break;
        } catch (error) {
          console.log(`‚ÑπÔ∏è  –°–µ–ª–µ–∫—Ç–æ—Ä ${selector} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
      }
      
      if (modalFound) {
        console.log('üìù –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–º—è –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"...');
        const nameResult = await testNameInput(page);
        if (nameResult) {
          console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∏–º—è –∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–≥—Ä–∞–¥—ã');
        } else {
          console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–º—è –∏–ª–∏ –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–≥—Ä–∞–¥—ã');
        }
      } else {
        console.log('‚ÑπÔ∏è  –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
      return true;
    } catch (error) {
      // –ï—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
      const successMessage = await page.isVisible('.message.success');
      const errorMessage = await page.isVisible('.message.error');
      
      if (successMessage) {
        console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email —É—Å–ø–µ—à–Ω–∞ - –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ`);
        return true;
      } else if (errorMessage) {
        console.log(`‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email –Ω–µ —É–¥–∞–ª–∞—Å—å - –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ`);
        return false;
      } else {
        console.log(`‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email –Ω–µ —É–¥–∞–ª–∞—Å—å - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å`);
        return false;
      }
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
async function runEmailRegistrationTest(page = null, context = null) {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email');
  console.log('=====================================');
  console.log(`üìÅ –ü—Ä–æ—Ñ–∏–ª—å: ${PROFILE_PATH}`);
  console.log(`üåê URL: ${getConfig().baseUrl}`);
  console.log(`üñ±Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å–æ—Ä: ${getConfig().browser.showCursor ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}`);
  console.log(`‚è±Ô∏è  –°–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏: ${getConfig().browser.slowMo}ms`);
  console.log('=====================================');

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ page –∏ context –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
  let shouldCloseContext = false;
  if (!page || !context) {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const browserOptions = {
      headless: getConfig().browser.headless,
      slowMo: getConfig().browser.slowMo,
      timeout: getConfig().browser.timeout,
      devtools: getConfig().browser.devtools || false,
      args: [
        '--show-cursor',
        '--force-cursor-visible',
        '--enable-cursor-compositing',
        '--disable-cursor-compositing=false',
        '--enable-features=VaapiVideoDecoder'
      ]
    };

    // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
    if (getConfig().browser.disableCache) {
      browserOptions.args.push(
        '--disable-application-cache',
        '--disable-offline-load-stale-cache',
        '--disable-background-networking',
        '--disable-background-timer-throttling',
        '--disable-backgrounding-occluded-windows',
        '--disable-renderer-backgrounding',
        '--disable-features=TranslateUI',
        '--disable-ipc-flooding-protection',
        '--aggressive-cache-discard'
      );
      console.log('üö´ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω');
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π launch –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ
    const browser = await chromium.launch(browserOptions);
    context = await browser.newContext({
      viewport: { width: 1280, height: 720 }
    });
    page = await context.newPage();
    shouldCloseContext = true;
  }

  // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  page.on('console', msg => {
    if (msg.type() === 'error' || msg.text().includes('OAuth') || msg.text().includes('auth')) {
      console.log(`üìù [${msg.type()}] ${msg.text()}`);
    }
  });

  page.on('pageerror', error => {
    console.log(`‚ùå [ERROR] ${error.message}`);
  });

  page.on('request', request => {
    if (request.url().includes('oauth') || request.url().includes('auth') || request.url().includes('vk.com') || request.url().includes('yandex.ru')) {
      console.log(`üåê [REQUEST] ${request.method()} ${request.url()}`);
    }
  });

  page.on('response', response => {
    if (response.url().includes('oauth') || response.url().includes('auth') || response.url().includes('vk.com') || response.url().includes('yandex.ru')) {
      console.log(`üì° [RESPONSE] ${response.status()} ${response.url()}`);
    }
  });

  try {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.goto(getConfig().baseUrl + '/auth');
    console.log(`üåê –û—Ç–∫—Ä—ã—Ç —Å–∞–π—Ç: ${getConfig().baseUrl}/auth`);

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    
    // 1. –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await deleteUserFromDB(getConfig().testAccount.email);
    
    // 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–µ—Å–ª–∏ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã)
    console.log('üö™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞...');
    await logoutUser(page);
    
    // 3. –ù–ï –æ—á–∏—â–∞–µ–º localStorage –∏ sessionStorage - —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('‚ÑπÔ∏è  –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...');
    
    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–∞—Ä–æ–ª–µ–π
    console.log('\nüîí –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò –ü–ê–†–û–õ–ï–ô:');
    console.log('=====================================');
    
    const passwordTests = [
      { password: '111', expectedError: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' },
      { password: '111111', expectedError: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±—É–∫–≤—É' },
      { password: getConfig().testAccount.password, expectedError: null } // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å, –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏
    ];
    
    let passwordTestsPassed = 0;
    for (const test of passwordTests) {
      const passed = await testPasswordValidation(page, getConfig().testAccount.email, test.password, test.expectedError);
      if (passed) passwordTestsPassed++;
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π: ${passwordTestsPassed}/${passwordTests.length} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email
    const result = await testEmailRegistration(page, getConfig().testAccount.email, getConfig().testAccount.password);
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=====================================');
    console.log(`üìß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email: ${result ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
    
    if (result) {
      console.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
    } else {
      console.log('‚ö†Ô∏è  –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù');
    }
    
    return result;

  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', error);
    return false;
  } finally {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–≤–∞–ª–∏
    if (shouldCloseContext && context) {
      await context.close();
    }
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  await runEmailRegistrationTest();
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { runEmailRegistrationTest, testEmailRegistration, testPasswordValidation };
