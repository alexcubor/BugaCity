const { runEmailRegistrationTest } = require('./test-email-registration');
const { runYandexOAuthTest } = require('./test-yandex-oauth');
const { runVKOAuthTest } = require('./test-vk-oauth');

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö OAuth —Ç–µ—Å—Ç–æ–≤');
  console.log('=====================================');
  console.log('üìã –¢–µ—Å—Ç—ã –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:');
  console.log('1. üìß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email');
  console.log('2. üîµ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth');
  // console.log('3. üîµ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ VK OAuth');
  console.log('=====================================\n');

  const results = {
    emailRegistration: false,
    yandexOAuth: false,
    vkOAuth: false
  };

  try {
    // 1. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email
    console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email...');
    try {
      const emailResult = await runEmailRegistrationTest();
      results.emailRegistration = emailResult;
      console.log(`‚úÖ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email –∑–∞–≤–µ—Ä—à–µ–Ω: ${emailResult ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}\n`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ email:', error.message);
      results.emailRegistration = false;
    }

    // 2. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth
    console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth...');
    try {
      const yandexResult = await runYandexOAuthTest();
      results.yandexOAuth = yandexResult;
      console.log(`‚úÖ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth –∑–∞–≤–µ—Ä—à–µ–Ω: ${yandexResult ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}\n`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Yandex OAuth:', error.message);
      results.yandexOAuth = false;
    }

    // 3. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ VK OAuth (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω)
    // console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ VK OAuth...');
    // try {
    //   const vkResult = await runVKOAuthTest();
    //   results.vkOAuth = vkResult;
    //   console.log(`‚úÖ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ VK OAuth –∑–∞–≤–µ—Ä—à–µ–Ω: ${vkResult ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}\n`);
    // } catch (error) {
    //   console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ VK OAuth:', error.message);
    //   results.vkOAuth = false;
    // }
    results.vkOAuth = true; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º VK —Ç–µ—Å—Ç

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤:', error);
  }

  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–°–ï–• –¢–ï–°–¢–û–í:');
  console.log('=====================================');
  console.log(`üìß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ email: ${results.emailRegistration ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
  console.log(`üîµ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Yandex OAuth: ${results.yandexOAuth ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
  console.log(`üîµ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ VK OAuth: ${results.vkOAuth ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);

  const successCount = Object.values(results).filter(Boolean).length;
  const totalTests = Object.keys(results).length;

  console.log(`\nüéØ –ò–¢–û–ì–û: ${successCount}/${totalTests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);

  if (successCount === totalTests) {
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
  } else if (successCount > 0) {
    console.log('‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´');
  } else {
    console.log('‚ùå –í–°–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´');
  }

  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  const command = process.argv[2];
  
  switch (command) {
    case 'test':
      await runAllTests();
      break;
    default:
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-all.js test');
      console.log('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã:');
      console.log('- node test-email-registration.js test');
      console.log('- node test-yandex-oauth.js test');
      console.log('- node test-vk-oauth.js test');
      break;
  }
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { runAllTests };
