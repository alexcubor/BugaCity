const { chromium } = require('playwright');
const fs = require('fs');
const path = require('path');
const config = require('./config');

// –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
const PROFILE_PATH = path.resolve(__dirname, '..', 'browser-profile');

async function launchPersistentBrowser(targetUrl = null) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π URL –∏–ª–∏ URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const url = targetUrl || config.baseUrl;
  
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º');
  console.log('=====================================');
  console.log(`üìÅ –ü—Ä–æ—Ñ–∏–ª—å: ${PROFILE_PATH}`);
  console.log(`üåê URL: ${url}`);
  console.log('üíæ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏');
  console.log('‚ùå –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ');
  console.log('=====================================');

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const browserOptions = {
    headless: config.browser.headless,
    slowMo: config.browser.slowMo,
    timeout: config.browser.timeout
  };

  // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
  if (config.browser.disableCache) {
    browserOptions.args = [
      '--disable-application-cache',
      '--disable-offline-load-stale-cache',
      '--disable-background-networking',
      '--disable-background-timer-throttling',
      '--disable-backgrounding-occluded-windows',
      '--disable-renderer-backgrounding',
      '--disable-features=TranslateUI',
      '--disable-ipc-flooding-protection',
      '--aggressive-cache-discard'
    ];
    console.log('üö´ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω');
  }

  const context = await chromium.launchPersistentContext(PROFILE_PATH, browserOptions);

  try {
    const page = context.pages()[0] || await context.newPage();

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    page.on('console', msg => {
      console.log(`üìù [${msg.type()}] ${msg.text()}`);
    });

    page.on('pageerror', error => {
      console.log(`‚ùå [ERROR] ${error.message}`);
    });

    page.on('request', request => {
      if (request.url().includes('oauth') || request.url().includes('auth') || request.url().includes('vk.com') || request.url().includes('yandex.ru')) {
        console.log(`üåê [REQUEST] ${request.method()} ${request.url()}`);
      }
    });

    page.on('response', response => {
      if (response.url().includes('oauth') || response.url().includes('auth') || response.url().includes('vk.com') || response.url().includes('yandex.ru')) {
        console.log(`üì° [RESPONSE] ${response.status()} ${response.url()}`);
      }
    });

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç
    await page.goto(url);
    console.log(`üåê –û—Ç–∫—Ä—ã—Ç —Å–∞–π—Ç: ${url}`);
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...');

    // –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è
    await new Promise((resolve) => {
      const checkInterval = setInterval(async () => {
        try {
          await page.evaluate(() => document.title);
        } catch (error) {
          clearInterval(checkInterval);
          resolve();
        }
      }, 1000);
    });

  } finally {
    console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    console.log(`üíæ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${PROFILE_PATH}`);
  }
}


// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  const url = process.argv[2];
  await launchPersistentBrowser(url);
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { launchPersistentBrowser };