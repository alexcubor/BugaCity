const { chromium } = require('playwright');
const config = require('./config');
const path = require('path');

// –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞
const PROFILE_PATH = path.resolve(__dirname, '..', 'browser-profile');

// –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞–≥—Ä–∞–¥
async function runRewardTest(page = null, context = null) {
  console.log('üéñÔ∏è –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω–∞–≥—Ä–∞–¥...');
  
  let initialName = null; // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
  let shouldCloseContext = false;
  
  try {
    console.log(`üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å: ${PROFILE_PATH}`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ page –∏ context –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
    if (!page || !context) {
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
      const browserOptions = {
        headless: config.browser.headless,
        slowMo: config.browser.slowMo,
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-dev-shm-usage',
          '--disable-accelerated-2d-canvas',
          '--no-first-run',
          '--no-zygote',
          '--disable-gpu'
        ]
      };
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º (–ø—Ä–æ—Ñ–∏–ª–µ–º)
      context = await chromium.launchPersistentContext(PROFILE_PATH, browserOptions);
      page = context.pages()[0] || await context.newPage();
      shouldCloseContext = true;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
    page.setDefaultTimeout(config.browser.timeout);
    
    // –°–ª—É—à–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    page.on('console', msg => {
      const text = msg.text();
      if (text.includes('üéØ') || text.includes('user') || text.includes('name') || text.includes('reward') || text.includes('modal') || text.includes('RewardViewer') || text.includes('HomePage') || text.includes('UserMenu')) {
        console.log(`üîç –ö–æ–Ω—Å–æ–ª—å: ${msg.type()} - ${text}`);
      }
    });
    
    // –°–ª—É—à–∞–µ–º –æ—à–∏–±–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page.on('pageerror', error => {
      console.log(`üîç –û—à–∏–±–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`);
    });
    
    const baseUrl = config.baseUrl;
    console.log(`üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ ${baseUrl}`);
    await page.goto(baseUrl, { waitUntil: 'networkidle' });
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ UserMenu
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ UserMenu...');
    await page.waitForSelector('.user-menu', { timeout: 10000 });
    console.log('‚úÖ UserMenu –Ω–∞–π–¥–µ–Ω');
    
    // === –≠–¢–ê–ü 1: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
    console.log('\nüìã –≠–¢–ê–ü 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('================================================');
    
    const currentNameElement = page.locator('.user-name').first();
    const initialName = await currentNameElement.inputValue();
    console.log(`üë§ –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${initialName}"`);
    
    // === –≠–¢–ê–ü 2: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞–≥—Ä–∞–¥—ã ===
    console.log('\nüéØ –≠–¢–ê–ü 2: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞–≥—Ä–∞–¥—ã');
    console.log('==========================================');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
    const avatarButton = page.locator('.user-menu-icon').first();
    await avatarButton.click();
    await page.waitForTimeout(1000);
    
    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
    await page.waitForSelector('.container-user-menu', { timeout: 5000 });
    console.log('‚úÖ –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ');
    
    // –ò—â–µ–º –Ω–∞–≥—Ä–∞–¥—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    let rewardImages;
    let rewardCount = 0;
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
      const rewardsContainer = page.locator('//*[@id="root"]/div[1]/div[2]/div/div');
      rewardImages = rewardsContainer.locator('img');
      rewardCount = await rewardImages.count();
      console.log(`üîç –ü–æ–∏—Å–∫ –≤ XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: –Ω–∞–π–¥–µ–Ω–æ ${rewardCount} –Ω–∞–≥—Ä–∞–¥`);
    } catch (error) {
      console.log('‚ö†Ô∏è XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã...');
    }
    
    // –ï—Å–ª–∏ –≤ XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    if (rewardCount === 0) {
      try {
        rewardImages = page.locator('.reward-item img');
        rewardCount = await rewardImages.count();
        console.log(`üîç –ü–æ–∏—Å–∫ –≤ .reward-item: –Ω–∞–π–¥–µ–Ω–æ ${rewardCount} –Ω–∞–≥—Ä–∞–¥`);
      } catch (error) {
        console.log('‚ö†Ô∏è .reward-item –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }
    
    if (rewardCount === 0) {
      try {
        rewardImages = page.locator('.rewards-container img');
        rewardCount = await rewardImages.count();
        console.log(`üîç –ü–æ–∏—Å–∫ –≤ .rewards-container: –Ω–∞–π–¥–µ–Ω–æ ${rewardCount} –Ω–∞–≥—Ä–∞–¥`);
      } catch (error) {
        console.log('‚ö†Ô∏è .rewards-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }
    
    if (rewardCount === 0) {
      console.log('‚ùå –ù–∞–≥—Ä–∞–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ');
      return false;
    }
    
    console.log(`üéñÔ∏è –ù–∞–π–¥–µ–Ω–æ –Ω–∞–≥—Ä–∞–¥: ${rewardCount}`);
    console.log('üéñÔ∏è –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é –Ω–∞–≥—Ä–∞–¥—É...');
    
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é –Ω–∞–≥—Ä–∞–¥—É
    await rewardImages.first().click();
    await page.waitForTimeout(2000);
    
    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modalOverlay = page.locator('.modal-overlay').first();
    await modalOverlay.waitFor({ state: 'visible', timeout: 10000 });
    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–≥—Ä–∞–¥—ã –æ—Ç–∫—Ä—ã—Ç–æ');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ 3D –º–æ–¥–µ–ª–∏
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ 3D –º–æ–¥–µ–ª–∏...');
    await page.waitForTimeout(2000);
    
    // === –≠–¢–ê–ü 3: –ü–æ–≤–æ—Ä–æ—Ç –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ ===
    console.log('\nüîÑ –≠–¢–ê–ü 3: –ü–æ–≤–æ—Ä–æ—Ç –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤');
    console.log('==========================================');
    
    // –ù–∞—Ö–æ–¥–∏–º canvas —Å 3D –º–æ–¥–µ–ª—å—é
    const canvas = page.locator('.modal-canvas').first();
    const canvasBox = await canvas.boundingBox();
    
    if (canvasBox) {
      console.log('üé® Canvas –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç...');
      
      // –î–µ–ª–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ (–ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏)
      const startX = canvasBox.x + canvasBox.width / 2;
      const startY = canvasBox.y + canvasBox.height / 2;
      const endX = startX + canvasBox.width; // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º –Ω–∞ —à–∏—Ä–∏–Ω—É canvas
      
      await page.mouse.move(startX, startY);
      await page.mouse.down();
      await page.mouse.move(endX, startY, { steps: 20 });
      await page.mouse.up();
      
      console.log('‚úÖ –ü–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      await page.waitForTimeout(2000);
    } else {
      console.log('‚ùå Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // === –≠–¢–ê–ü 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 3D —Å—Ü–µ–Ω–µ ===
    console.log('\nüë§ –≠–¢–ê–ü 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 3D —Å—Ü–µ–Ω–µ');
    console.log('============================================================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –ø—Ä—è–º–æ –≤ canvas Babylon.js
    const nameInScene = await page.evaluate(() => {
      // –ò—â–µ–º canvas –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
      const canvas = document.querySelector('.modal-canvas');
      if (!canvas) {
        return { error: 'Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω' };
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç canvas
      const ctx = canvas.getContext('2d');
      if (!ctx) {
        return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç canvas' };
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å canvas
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;
      
      // –ò—â–µ–º —Ç–µ–∫—Å—Ç –≤ –æ–±–ª–∞—Å—Ç–∏, –≥–¥–µ –æ–±—ã—á–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      // (–ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª, –ø–æ–≤–µ—Ä–Ω—É—Ç—ã–π –Ω–∞ -30 –≥—Ä–∞–¥—É—Å–æ–≤)
      const centerX = Math.floor(canvas.width * 0.85); // 85% –æ—Ç —à–∏—Ä–∏–Ω—ã
      const centerY = Math.floor(canvas.height * 0.85); // 85% –æ—Ç –≤—ã—Å–æ—Ç—ã
      const searchRadius = 100; // –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∏–∫—Å–µ–ª–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–º–µ–Ω–∏ (–Ω–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ)
      let hasText = false;
      for (let y = centerY - searchRadius; y < centerY + searchRadius; y += 5) {
        for (let x = centerX - searchRadius; x < centerX + searchRadius; x += 5) {
          if (x >= 0 && x < canvas.width && y >= 0 && y < canvas.height) {
            const index = (y * canvas.width + x) * 4;
            const alpha = data[index + 3]; // –ê–ª—å—Ñ–∞-–∫–∞–Ω–∞–ª
            if (alpha > 50) { // –ï—Å–ª–∏ –ø–∏–∫—Å–µ–ª—å –Ω–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π
              hasText = true;
              break;
            }
          }
        }
        if (hasText) break;
      }
      
      return {
        canvasFound: true,
        canvasSize: { width: canvas.width, height: canvas.height },
        hasTextInNameArea: hasText,
        searchArea: { centerX, centerY, radius: searchRadius }
      };
    });
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏ –≤ 3D —Å—Ü–µ–Ω–µ:', nameInScene);
    
    if (nameInScene.error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${nameInScene.error}`);
    } else if (nameInScene.hasTextInNameArea) {
      console.log('‚úÖ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ 3D —Å—Ü–µ–Ω–µ');
    } else {
      console.log('‚ö†Ô∏è –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ –æ–±–ª–∞—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏
    await page.screenshot({ path: 'test-reward-initial-name.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∏–º–µ–Ω–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω: test-reward-initial-name.png');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É
    console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É...');
    
    try {
      // –ö–ª–∏–∫–∞–µ–º –ø–æ —Ñ–æ–Ω—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–Ω–µ –ø–æ —Å–∞–º–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É)
      await page.click('.modal-overlay', { position: { x: 50, y: 50 } });
      await page.waitForTimeout(1000);
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É');
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error.message);
      // Fallback: Escape
      await page.keyboard.press('Escape');
      await page.waitForTimeout(1000);
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ Escape');
    }
    
    await page.waitForTimeout(1000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ
    const modalVisible = await page.locator('.modal-overlay').isVisible().catch(() => false);
    if (modalVisible) {
      console.log('‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Å–µ –µ—â–µ –≤–∏–¥–∏–º–æ, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º...');
      await page.evaluate(() => {
        const modal = document.querySelector('.modal-overlay');
        if (modal) {
          modal.style.display = 'none';
          modal.remove(); // –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º –∏–∑ DOM
        }
      });
    }
    
    // === –≠–¢–ê–ü 5: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
    console.log('\n‚úèÔ∏è –≠–¢–ê–ü 5: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('======================================');
    
    const newName = `–¢–µ—Å—Ç${Date.now()}`;
    console.log(`‚úèÔ∏è –ò–∑–º–µ–Ω—è–µ–º –∏–º—è –Ω–∞: "${newName}"`);
    
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–æ–ª–µ –∏–º–µ–Ω–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await currentNameElement.click();
    await page.waitForTimeout(500);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –∏ –≤–≤–æ–¥–∏–º –Ω–æ–≤–æ–µ –∏–º—è
    await currentNameElement.fill(newName);
    await page.waitForTimeout(500);
    
    // –ù–∞–∂–∏–º–∞–µ–º Enter –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    await currentNameElement.press('Enter');
    await page.waitForTimeout(2000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º—è –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
    const updatedName = await currentNameElement.inputValue();
    console.log(`‚úÖ –ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: "${updatedName}"`);
    
    if (updatedName !== newName) {
      console.log('‚ùå –ò–º—è –Ω–µ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å –≤ UserMenu');
      return false;
    }
    
    // –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –º–µ–Ω—é –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –Ω—É–∂–Ω–æ –µ–≥–æ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç—å
    console.log('üîç –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏...');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMenuButton = page.locator('.user-menu-icon').first();
    await userMenuButton.click();
    await page.waitForTimeout(1000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–≥—Ä–∞–¥—ã –≤–∏–¥–Ω—ã –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é...');
    const rewardsAfterNameUpdate = page.locator('xpath=//*[@id="root"]/div[1]/div[2]/div/div//img');
    const rewardsCountAfterUpdate = await rewardsAfterNameUpdate.count();
    console.log(`üîç –ù–∞–≥—Ä–∞–¥ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é: ${rewardsCountAfterUpdate}`);
    
    if (rewardsCountAfterUpdate === 0) {
      console.log('‚ö†Ô∏è –ù–∞–≥—Ä–∞–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é!');
      // –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
      console.log('üîç –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
      await page.reload();
      await page.waitForTimeout(3000);
      
      // –°–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
      const userMenuButtonAfterReload = page.locator('.user-menu-icon').first();
      await userMenuButtonAfterReload.click();
      await page.waitForTimeout(1000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
      const rewardsAfterReload = page.locator('xpath=//*[@id="root"]/div[1]/div[2]/div/div//img');
      const rewardsCountAfterReload = await rewardsAfterReload.count();
      console.log(`üîç –ù–∞–≥—Ä–∞–¥ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é: ${rewardsCountAfterReload}`);
    }
    
    // === –≠–¢–ê–ü 6: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞–≥—Ä–∞–¥—ã ===
    console.log('\nüéØ –≠–¢–ê–ü 6: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞–≥—Ä–∞–¥—ã');
    console.log('====================================');
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–æ
    await page.evaluate(() => {
      const modal = document.querySelector('.modal-overlay');
      if (modal) {
        modal.remove();
      }
    });
    
    // –°–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    let menuOpened = false;
    for (let attempt = 1; attempt <= 3; attempt++) {
      console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/3 –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é...`);
      
      try {
        await avatarButton.click();
        await page.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã–ª–æ—Å—å –ª–∏ –º–µ–Ω—é
        const menuVisible = await page.locator('.container-user-menu').isVisible().catch(() => false);
        if (menuVisible) {
          console.log('‚úÖ –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ');
          menuOpened = true;
          break;
        } else {
          console.log(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑...`);
          await page.waitForTimeout(1000);
        }
      } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}: ${error.message}`);
        await page.waitForTimeout(1000);
      }
    }
    
    if (!menuOpened) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é');
      return false;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–≥—Ä–∞–¥—ã –∑–∞–Ω–æ–≤–æ –∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é
    let currentRewardImages;
    let currentRewardCount = 0;
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
      const rewardsContainer = page.locator('//*[@id="root"]/div[1]/div[2]/div/div');
      currentRewardImages = rewardsContainer.locator('img');
      currentRewardCount = await currentRewardImages.count();
      console.log(`üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –≤ XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: –Ω–∞–π–¥–µ–Ω–æ ${currentRewardCount} –Ω–∞–≥—Ä–∞–¥`);
    } catch (error) {
      console.log('‚ö†Ô∏è XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã...');
    }
    
    // –ï—Å–ª–∏ –≤ XPath –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    if (currentRewardCount === 0) {
      try {
        currentRewardImages = page.locator('.reward-item img');
        currentRewardCount = await currentRewardImages.count();
        console.log(`üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –≤ .reward-item: –Ω–∞–π–¥–µ–Ω–æ ${currentRewardCount} –Ω–∞–≥—Ä–∞–¥`);
      } catch (error) {
        console.log('‚ö†Ô∏è .reward-item –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }
    
    if (currentRewardCount === 0) {
      try {
        currentRewardImages = page.locator('.rewards-container img');
        currentRewardCount = await currentRewardImages.count();
        console.log(`üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –≤ .rewards-container: –Ω–∞–π–¥–µ–Ω–æ ${currentRewardCount} –Ω–∞–≥—Ä–∞–¥`);
      } catch (error) {
        console.log('‚ö†Ô∏è .rewards-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }
    
    if (currentRewardCount === 0) {
      console.log('‚ùå –ù–∞–≥—Ä–∞–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è');
      return false;
    }
    
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é –Ω–∞–≥—Ä–∞–¥—É
    console.log('üéñÔ∏è –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é –Ω–∞–≥—Ä–∞–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞
    const rewardElement = currentRewardImages.first();
    const isVisible = await rewardElement.isVisible();
    const isEnabled = await rewardElement.isEnabled();
    console.log(`üîç –ù–∞–≥—Ä–∞–¥–∞ –≤–∏–¥–∏–º–∞: ${isVisible}, –∞–∫—Ç–∏–≤–Ω–∞: ${isEnabled}`);
    
    await rewardElement.click();
    await page.waitForTimeout(2000);
    
    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    console.log('üîç –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
    try {
      await page.waitForSelector('.modal-overlay', { timeout: 10000 });
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ DOM');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
      const modalVisible = await page.locator('.modal-overlay').isVisible();
      console.log(`üîç –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–∏–¥–∏–º–æ: ${modalVisible}`);
      
      if (modalVisible) {
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–≥—Ä–∞–¥—ã –æ—Ç–∫—Ä—ã—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ');
      } else {
        console.log('‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ –≤–∏–¥–∏–º–æ, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º...');
        // –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å
        await page.evaluate(() => {
          const modal = document.querySelector('.modal-overlay');
          if (modal) {
            modal.style.display = 'flex';
            modal.style.visibility = 'visible';
            modal.style.opacity = '1';
            modal.style.zIndex = '1000';
          }
        });
        await page.waitForTimeout(2000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
        const modalVisibleAfter = await page.locator('.modal-overlay').isVisible();
        console.log(`üîç –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–∏–¥–∏–º–æ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞: ${modalVisibleAfter}`);
      }
    } catch (error) {
      console.log('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥');
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
      const currentUrl = page.url();
      console.log(`üîç –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
      const logs = await page.evaluate(() => {
        return window.console._logs || [];
      });
      console.log('üîç –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏:', logs);
      
      return false;
    }
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ 3D –º–æ–¥–µ–ª–∏
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ 3D –º–æ–¥–µ–ª–∏...');
    await page.waitForTimeout(2000);
    
    // === –≠–¢–ê–ü 7: –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ ===
    console.log('\nüîÑ –≠–¢–ê–ü 7: –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤');
    console.log('===========================================');
    
    if (canvasBox) {
      console.log('üé® –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç...');
      
      // –î–µ–ª–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ (–ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏)
      const startX = canvasBox.x + canvasBox.width / 2;
      const startY = canvasBox.y + canvasBox.height / 2;
      const endX = startX + canvasBox.width; // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º –Ω–∞ —à–∏—Ä–∏–Ω—É canvas
      
      await page.mouse.move(startX, startY);
      await page.mouse.down();
      await page.mouse.move(endX, startY, { steps: 20 });
      await page.mouse.up();
      
      console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      await page.waitForTimeout(2000);
    }
    
    // === –≠–¢–ê–ü 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –≤ 3D —Å—Ü–µ–Ω–µ ===
    console.log('\nüë§ –≠–¢–ê–ü 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –≤ 3D —Å—Ü–µ–Ω–µ');
    console.log('=============================================================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∏–º—è –ø—Ä—è–º–æ –≤ canvas Babylon.js
    const updatedNameInScene = await page.evaluate(() => {
      // –ò—â–µ–º canvas –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
      const canvas = document.querySelector('.modal-canvas');
      if (!canvas) {
        return { error: 'Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω' };
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç canvas
      const ctx = canvas.getContext('2d');
      if (!ctx) {
        return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç canvas' };
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å canvas
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;
      
      // –ò—â–µ–º —Ç–µ–∫—Å—Ç –≤ –æ–±–ª–∞—Å—Ç–∏, –≥–¥–µ –æ–±—ã—á–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const centerX = Math.floor(canvas.width * 0.85);
      const centerY = Math.floor(canvas.height * 0.85);
      const searchRadius = 100;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∏–∫—Å–µ–ª–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–º–µ–Ω–∏
      let hasText = false;
      let textPixels = 0;
      for (let y = centerY - searchRadius; y < centerY + searchRadius; y += 3) {
        for (let x = centerX - searchRadius; x < centerX + searchRadius; x += 3) {
          if (x >= 0 && x < canvas.width && y >= 0 && y < canvas.height) {
            const index = (y * canvas.width + x) * 4;
            const alpha = data[index + 3];
            if (alpha > 50) {
              hasText = true;
              textPixels++;
            }
          }
        }
      }
      
      return {
        canvasFound: true,
        canvasSize: { width: canvas.width, height: canvas.height },
        hasTextInNameArea: hasText,
        textPixelsCount: textPixels,
        searchArea: { centerX, centerY, radius: searchRadius }
      };
    });
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –≤ 3D —Å—Ü–µ–Ω–µ:', updatedNameInScene);
    
    if (updatedNameInScene.error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${updatedNameInScene.error}`);
    } else if (updatedNameInScene.hasTextInNameArea) {
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∏–º—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ 3D —Å—Ü–µ–Ω–µ (${updatedNameInScene.textPixelsCount} –ø–∏–∫—Å–µ–ª–µ–π)`);
    } else {
      console.log('‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∏–º—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ –æ–±–ª–∞—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
    await page.screenshot({ path: 'test-reward-updated-name.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω: test-reward-updated-name.png');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É
    console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É...');
    
    try {
      // –ö–ª–∏–∫–∞–µ–º –ø–æ —Ñ–æ–Ω—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–Ω–µ –ø–æ —Å–∞–º–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É)
      await page.click('.modal-overlay', { position: { x: 50, y: 50 } });
      await page.waitForTimeout(1000);
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –∫–ª–∏–∫–æ–º –ø–æ —Ñ–æ–Ω—É');
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error.message);
      // Fallback: Escape
      await page.keyboard.press('Escape');
      await page.waitForTimeout(1000);
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ Escape');
    }
    
    // === –í–û–ó–í–†–ê–¢ –ò–°–•–û–î–ù–û–ì–û –ò–ú–ï–ù–ò ===
    console.log('\nüîÑ –í–û–ó–í–†–ê–¢ –ò–°–•–û–î–ù–û–ì–û –ò–ú–ï–ù–ò');
    console.log('==========================');
    console.log(`üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è: "${initialName}"`);
    
    // –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
    const modalStillOpen = await page.locator('.modal-overlay').isVisible();
    if (modalStillOpen) {
      console.log('üîç –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∏–º–µ–Ω–∏...');
      try {
        await page.click('.modal-overlay', { position: { x: 50, y: 50 } });
        await page.waitForTimeout(1000);
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
      } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error.message);
        await page.keyboard.press('Escape');
        await page.waitForTimeout(1000);
      }
    }
    
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø–æ–ª–µ –∏–º–µ–Ω–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await currentNameElement.click();
    await page.waitForTimeout(500);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –∏ –≤–≤–æ–¥–∏–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è
    await currentNameElement.fill(initialName);
    await page.waitForTimeout(500);
    
    // –ù–∞–∂–∏–º–∞–µ–º Enter –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    await currentNameElement.press('Enter');
    await page.waitForTimeout(2000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º—è –≤–µ—Ä–Ω—É–ª–æ—Å—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É
    const restoredName = await currentNameElement.inputValue();
    if (restoredName === initialName) {
      console.log('‚úÖ –ò–º—è —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É');
    } else {
      console.log(`‚ö†Ô∏è –ò–º—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º. –û–∂–∏–¥–∞–ª–æ—Å—å: "${initialName}", –ø–æ–ª—É—á–µ–Ω–æ: "${restoredName}"`);
    }
    
    console.log('‚úÖ –í—Å–µ —ç—Ç–∞–ø—ã —Ç–µ—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
    if (page) {
      try {
        await page.screenshot({ path: 'test-reward-error.png', fullPage: true });
        console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: test-reward-error.png');
      } catch (screenshotError) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç:', screenshotError);
      }
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    if (page && initialName) {
      try {
        console.log('\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤–µ—Ä–Ω—É—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –ø—Ä–∏ –æ—à–∏–±–∫–µ...');
        const currentNameElement = page.locator('.user-name').first();
        await currentNameElement.click();
        await page.waitForTimeout(500);
        await currentNameElement.fill(initialName);
        await page.waitForTimeout(500);
        await currentNameElement.press('Enter');
        await page.waitForTimeout(1000);
        console.log('‚úÖ –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ');
      } catch (restoreError) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–µ—Ä–Ω—É—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –ø—Ä–∏ –æ—à–∏–±–∫–µ:', restoreError.message);
      }
    }
    
    return false;
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–≤–∞–ª–∏
    if (shouldCloseContext && context) {
      await context.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
async function main() {
  console.log('üéñÔ∏è –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞–≥—Ä–∞–¥ –∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('===============================================');
  console.log('–≠—Ç–∞–ø—ã —Ç–µ—Å—Ç–∞:');
  console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('2. –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞–≥—Ä–∞–¥—ã (–ø–µ—Ä–≤—ã–π —Ä–∞–∑)');
  console.log('3. –ü–æ–≤–æ—Ä–æ—Ç –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤');
  console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('5. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ input');
  console.log('6. –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞–≥—Ä–∞–¥—ã (–≤—Ç–æ—Ä–æ–π —Ä–∞–∑)');
  console.log('7. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤');
  console.log('8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏');
  console.log('9. –í–æ–∑–≤—Ä–∞—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('===============================================\n');
  
  try {
    const result = await runRewardTest();
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:');
    console.log('=====================================');
    console.log(`üéñÔ∏è –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞–≥—Ä–∞–¥: ${result ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}`);
    
    if (result) {
      console.log('\nüéâ –í–°–ï –≠–¢–ê–ü–´ –¢–ï–°–¢–ê –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
      console.log('üì∏ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã:');
      console.log('  - test-reward-initial-name.png (–∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è)');
      console.log('  - test-reward-updated-name.png (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∏–º—è)');
      console.log('  - test-reward-final-name.png (—Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è)');
      process.exit(0);
    } else {
      console.log('\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù');
      console.log('üì∏ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏: test-reward-error.png');
      process.exit(1);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { runRewardTest };
