// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB
print('üöÄ Starting MongoDB initialization...');

// –ß–∏—Ç–∞–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ —Ñ–∞–π–ª–∞ (Docker secret)
const fs = require('fs');
let mongodbPassword;
try {
  mongodbPassword = fs.readFileSync('/run/secrets/mongodb_password', 'utf8').trim();
  print('‚úÖ Password read from Docker secret');
} catch (e) {
  // Fallback –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  mongodbPassword = process.env.MONGODB_PASSWORD || 'default_password';
  print('‚ö†Ô∏è  Using fallback password from environment');
}

// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö bugacity
db = db.getSiblingDB('bugacity');
print('üìÅ Switched to bugacity database');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
const existingUser = db.getUser('bugacity_admin');
if (existingUser) {
  print('üë§ User bugacity_admin already exists, skipping creation');
} else {
  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  db.createUser({
    user: 'bugacity_admin',
    pwd: mongodbPassword,
    roles: [
      {
        role: 'readWrite',
        db: 'bugacity'
      }
    ]
  });
  print('‚úÖ User bugacity_admin created successfully');
}

// –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
db.createCollection('users');
db.createCollection('rewards');

// –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
db.users.createIndex({ email: 1 }, { unique: true });
db.users.createIndex({ username: 1 }, { unique: true });
db.rewards.createIndex({ userId: 1 });

// –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
db.users.createIndex({ "location.coordinates": "2dsphere" });
db.users.createIndex({ "location.lastUpdated": -1 });
db.users.createIndex({ "location.isActive": 1 });

// –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥—Ä—É–∂–±—ã
db.createCollection("friendships");

// –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –¥—Ä—É–∂–±—ã (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!)
db.friendships.createIndex({ "requester": 1, "status": 1 });
db.friendships.createIndex({ "addressee": 1, "status": 1 });
db.friendships.createIndex({ "requester": 1, "addressee": 1 }, { unique: true });
db.friendships.createIndex({ "createdAt": -1 });

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É Pioneer (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç)
const existingPioneer = db.rewards.findOne({ name: 'pioneer' });
if (!existingPioneer) {
  db.rewards.insertOne({
    name: 'pioneer',
    translations: {
      ru: {
        label: '–ü–∏–æ–Ω–µ—Ä',
        description: '–í—Ä—É—á–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ì–ª—é–∫–æ–≥—Ä–∞–¥–∞'
      },
      en: {
        label: 'Pioneer',
        description: 'Awarded to the first users of Bugacity'
      }
    },
    price: 10000
  });
}

print('Database initialized successfully');
