#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –∏–º–µ–Ω–∏ –±—ç–∫–∞–ø–∞
const now = new Date();
const dateStr = now.toISOString().split('T')[0]; // YYYY-MM-DD
const timeStr = now.toTimeString().split(' ')[0].replace(/:/g, '-'); // HH-MM-SS
const backupName = `bugacity-backup-${dateStr}-${timeStr}`;

console.log(`üóÑÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞: ${backupName}`);

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–∞
const backupDir = path.join(__dirname, '..', 'backups', backupName);
if (!fs.existsSync(path.dirname(backupDir))) {
  fs.mkdirSync(path.dirname(backupDir), { recursive: true });
  
  // –î–æ–±–∞–≤–ª—è–µ–º backups –≤ .gitignore –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
  const gitignorePath = path.join(__dirname, '..', '.gitignore');
  if (fs.existsSync(gitignorePath)) {
    const gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
    if (!gitignoreContent.includes('backups/')) {
      fs.appendFileSync(gitignorePath, '\n# Backup files\nbackups/\n');
      console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backups –≤ .gitignore');
    }
  }
}
fs.mkdirSync(backupDir, { recursive: true });

console.log(`üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–∞: ${backupDir}`);

try {
  // 1. –ë—ç–∫–∞–ø MongoDB –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ MongoDB...');
  const mongoBackupDir = path.join(backupDir, 'mongodb');
  fs.mkdirSync(mongoBackupDir, { recursive: true });
  
  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ç–∫–∞–ø–∞ MongoDB —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
  const mongoBackupCmd = `docker exec $(docker ps -q -f name=bugacity_mongodb) mongodump --host localhost:27017 --db bugacity --username bugacity_user --password bugacity_password --authenticationDatabase bugacity --out /tmp/backup`;
  const mongoCopyCmd = `docker cp $(docker ps -q -f name=bugacity_mongodb):/tmp/backup/bugacity ${mongoBackupDir}/`;
  
  execSync(mongoBackupCmd, { stdio: 'inherit' });
  execSync(mongoCopyCmd, { stdio: 'inherit' });
  
  console.log('‚úÖ –ë—ç–∫–∞–ø MongoDB —Å–æ–∑–¥–∞–Ω');

  // 2. –ë—ç–∫–∞–ø –∞–≤–∞—Ç–∞—Ä–æ–∫ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  console.log('üñºÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤...');
  const uploadsBackupDir = path.join(backupDir, 'uploads');
  
  // –ö–æ–ø–∏—Ä—É–µ–º volume —Å –∞–≤–∞—Ç–∞—Ä–∫–∞–º–∏
  const uploadsCopyCmd = `docker cp $(docker ps -q -f name=bugacity_app):/app/uploads ${uploadsBackupDir}/`;
  execSync(uploadsCopyCmd, { stdio: 'inherit' });
  
  console.log('‚úÖ –ë—ç–∫–∞–ø –∞–≤–∞—Ç–∞—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω');
  
  console.log('üéâ –ü–æ–ª–Ω—ã–π –±—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
  console.log(`üìç –ü—É—Ç—å –∫ –±—ç–∫–∞–ø—É: ${backupDir}`);

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞:', error.message);
  process.exit(1);
}
